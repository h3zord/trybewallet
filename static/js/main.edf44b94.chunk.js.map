{"version":3,"sources":["components/WalletForm.module.css","pages/Login.module.css","components/Header.module.css","images/logoTrybeWallet.svg","components/Table.module.css","pages/Wallet.module.css","images/Vector.svg","images/Vector1.svg","images/editar.svg","images/excluir.svg","redux/actions/index.js","pages/Login.js","components/Header.js","components/Table.js","components/WalletForm.js","pages/Wallet.js","App.js","serviceWorker.js","redux/reducers/user.js","redux/reducers/wallet.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","expensesAction","payload","type","updateExpense","getCoin","failedRequest","Login","handleLogin","target","name","value","setState","handleVerifyLogin","state","email","pass","test","length","isDisabled","sucessLogin","props","history","loginSucessAction","push","this","className","styles","container","formCard","imgContainer","src","logoWallet","alt","placeholder","data-testid","onChange","buttonDisabled","buttonEnabled","disabled","onClick","React","Component","connect","dispatch","loginAction","Header","getEmail","getExpenses","logo","expense","coin","toFixed","avatar","store","user","wallet","totalExpenses","Table","deleteExpense","dataExpenses","updateExpenseAction","totalSumExpenses","filteredExpenses","filter","id","toString","reduce","acc","curr","parseFloat","exchangeRates","currency","ask","editExpense","editExpenseAction","mainContainer","scope","map","key","description","tag","method","editImg","deleteImg","expenses","WalletForm","fetchCurrencies","fetchCurrencysRequest","fetch","promisse","json","data","filteredData","Object","keys","sumExpenses","handleInputs","handleClick","prev","setTimeout","idToEdit","handleInputsEdit","handleClickEdit","finishEditAction","dataCoin","switchButton","form","htmlFor","min","coinName","payment","button","currencies","editor","getCurrencies","fetchCoin","Wallet","container2","App","exact","path","component","Boolean","window","location","hostname","match","INITIAL_STATE","action","error","isFetching","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.edf44b94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WalletForm_container__1XQtz\",\"form\":\"WalletForm_form__1bmma\",\"description\":\"WalletForm_description__2bpra\",\"tag\":\"WalletForm_tag__3wZV3\",\"value\":\"WalletForm_value__3bWUw\",\"coin\":\"WalletForm_coin__1fe_E\",\"payment\":\"WalletForm_payment__2iVJt\",\"button\":\"WalletForm_button__2NSQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2B2pj\",\"formCard\":\"Login_formCard__qcLYo\",\"imgContainer\":\"Login_imgContainer__3_L4g\",\"email\":\"Login_email__EMdTM\",\"pass\":\"Login_pass__UH8eQ\",\"buttonEnabled\":\"Login_buttonEnabled__1pnK-\",\"buttonDisabled\":\"Login_buttonDisabled__1-FZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__X8QFV\",\"logo\":\"Header_logo__2ins2\",\"expense\":\"Header_expense__2U94v\",\"email\":\"Header_email__1i755\"};","module.exports = __webpack_public_path__ + \"static/media/logoTrybeWallet.a196f217.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Table_mainContainer__16wHz\",\"container\":\"Table_container__f9gDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Wallet_container__32rLJ\",\"container2\":\"Wallet_container2__1l1QZ\"};","module.exports = __webpack_public_path__ + \"static/media/Vector.d4142d13.svg\";","module.exports = __webpack_public_path__ + \"static/media/Vector1.fa2e04a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/editar.693488fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/excluir.40170ccc.svg\";","// Coloque aqui suas actions\nconst LOGIN_SUCESS = 'LOGIN_SUCESS';\nconst CURRENCIES_REQUEST = 'CURRENCIES_REQUEST';\nconst GET_COIN = 'GET_COIN';\nconst FAILED_REQUEST = 'FAILED_REQUEST';\nconst GET_CURRENCIES = 'GET_CURRENCIES';\nconst SUM_EXPENSES = 'SUM_EXPENSES';\nconst UPDATE_EXPENSE = 'UPDATE_EXPENSE';\nconst EDIT_EXPENSE = 'EDIT_EXPENSE';\nconst FINISH_EDIT = 'FINISH_EDIT';\n\nexport const loginAction = (payload) => ({ type: LOGIN_SUCESS, payload });\n\nexport const getCurrencies = (payload) => ({ type: GET_CURRENCIES, payload });\n\nexport const expensesAction = (payload) => ({ type: SUM_EXPENSES, payload });\n\nexport const updateExpense = (payload) => ({ type: UPDATE_EXPENSE, payload });\n\nexport const editExpense = (payload) => ({ type: EDIT_EXPENSE, payload });\n\nexport const finishEdit = () => ({ type: FINISH_EDIT });\n\nexport const currenciesRequest = () => ({ type: CURRENCIES_REQUEST });\n\nconst getCoin = (payload) => ({ type: GET_COIN, payload });\n\nconst failedRequest = (payload) => ({ type: FAILED_REQUEST, payload });\n\nexport function fetchCoin(payload) {\n  return async (dispatch) => {\n    dispatch(currenciesRequest());\n    try {\n      const URL = 'https://economia.awesomeapi.com.br/json/all';\n      const promisse = await fetch(URL);\n      const data = await promisse.json();\n      dispatch(getCoin([{ ...payload, exchangeRates: { ...data } }]));\n    } catch (error) {\n      dispatch(failedRequest(error));\n    }\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginAction } from '../redux/actions';\nimport styles from './Login.module.css';\nimport logoWallet from '../images/logoTrybeWallet.svg';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      pass: '',\n      isDisabled: true,\n    };\n  }\n\n  handleLogin = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => { this.handleVerifyLogin(); });\n  }\n\n  handleVerifyLogin = () => {\n    const { email, pass } = this.state;\n    const NUMBER = 6;\n    const regex = /\\S+@\\S+\\.\\S+/;\n    if (regex.test(email) && pass.length >= NUMBER) this.setState({ isDisabled: false });\n    else { this.setState({ isDisabled: true }); }\n  }\n\n  sucessLogin = () => {\n    const { history, loginSucessAction } = this.props;\n    const { email } = this.state;\n    loginSucessAction(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { email, pass, isDisabled } = this.state;\n    return (\n      <div className={ styles.container }>\n        <div className={ styles.formCard }>\n          <div className={ styles.imgContainer }>\n            <img src={ logoWallet } alt=\"Logo trybe wallet\" />\n          </div>\n          <input\n            type=\"email\"\n            className={ styles.email }\n            placeholder=\"Digite seu email\"\n            data-testid=\"email-input\"\n            name=\"email\"\n            value={ email }\n            onChange={ this.handleLogin }\n          />\n          <input\n            type=\"password\"\n            className={ styles.pass }\n            placeholder=\"Digite sua senha de 6 dígitos\"\n            data-testid=\"password-input\"\n            name=\"pass\"\n            value={ pass }\n            onChange={ this.handleLogin }\n          />\n          <button\n            type=\"button\"\n            className={ isDisabled ? styles.buttonDisabled : styles.buttonEnabled }\n            disabled={ isDisabled }\n            onClick={ this.sucessLogin }\n          >\n            Entrar\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  loginSucessAction: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  loginSucessAction: (payload) => dispatch(loginAction(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './Header.module.css';\nimport logoWallet from '../images/logoTrybeWallet.svg';\nimport coin from '../images/Vector.svg';\nimport avatar from '../images/Vector1.svg';\n\nclass Header extends Component {\n  render() {\n    const { getEmail, getExpenses } = this.props;\n    return (\n      <div className={ styles.container }>\n        <div className={ styles.logo }>\n          <img src={ logoWallet } alt=\"logo wallet trybe\" />\n        </div>\n        <div className={ styles.expense }>\n          <img src={ coin } alt=\"logo coin\" />\n          <p>Despesa Total: </p>\n          <span data-testid=\"total-field\">{ getExpenses.toFixed(2) }</span>\n          <span data-testid=\"header-currency-field\">BRL</span>\n        </div>\n        <div className={ styles.email }>\n          <img src={ avatar } alt=\"avatar\" />\n          <span data-testid=\"email-field\">{ getEmail }</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  getEmail: PropTypes.string.isRequired,\n  getExpenses: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n  getEmail: store.user.email,\n  getExpenses: store.wallet.totalExpenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { editExpense, expensesAction, updateExpense } from '../redux/actions';\nimport styles from './Table.module.css';\nimport editImg from '../images/editar.svg';\nimport deleteImg from '../images/excluir.svg';\n\nclass Table extends Component {\n  deleteExpense = ({ target }) => {\n    const { className } = target;\n    const { dataExpenses, updateExpenseAction, totalSumExpenses } = this.props;\n\n    const filteredExpenses = dataExpenses\n      .filter((expense) => (expense.id).toString() !== className);\n\n    const totalExpenses = filteredExpenses.reduce((acc, curr) => {\n      acc += (parseFloat(curr.value) * parseFloat(curr.exchangeRates[curr.currency].ask));\n      return acc;\n    }, 0);\n\n    updateExpenseAction(filteredExpenses);\n    totalSumExpenses(parseFloat(totalExpenses));\n  }\n\n  editExpense = ({ target }) => {\n    const { className } = target;\n    const { editExpenseAction } = this.props;\n    editExpenseAction(parseFloat(className));\n  }\n\n  render() {\n    const { dataExpenses } = this.props;\n    return (\n      <div className={ styles.mainContainer }>\n        <table className={ styles.container }>\n          <thead>\n            <tr>\n              <th scope=\"col\">Descrição</th>\n              <th scope=\"col\">Tag</th>\n              <th scope=\"col\">Método de pagamento</th>\n              <th scope=\"col\">Valor</th>\n              <th scope=\"col\">Moeda</th>\n              <th scope=\"col\">Câmbio utilizado</th>\n              <th scope=\"col\">Valor convertido</th>\n              <th scope=\"col\">Moeda de conversão</th>\n              <th scope=\"col\">Editar/Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              dataExpenses.map((expense) => (\n                <tr key={ expense.id }>\n                  <td>{ expense.description }</td>\n                  <td>{ expense.tag }</td>\n                  <td>{ expense.method }</td>\n                  <td>{ parseFloat((expense.value)).toFixed(2) }</td>\n                  <td>{ expense.exchangeRates[expense.currency].name }</td>\n                  <td>\n                    { parseFloat(expense.exchangeRates[expense.currency].ask).toFixed(2) }\n                  </td>\n                  <td>\n                    {\n                      (parseFloat(expense.value)\n                      * parseFloat(expense.exchangeRates[expense.currency].ask))\n                        .toFixed(2)\n                    }\n                  </td>\n                  <td>Real</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      data-testid=\"edit-btn\"\n                      className={ expense.id }\n                      onClick={ this.editExpense }\n                    >\n                      <img src={ editImg } alt=\"img editar\" className={ expense.id } />\n                    </button>\n                    <button\n                      type=\"button\"\n                      data-testid=\"delete-btn\"\n                      className={ expense.id }\n                      onClick={ this.deleteExpense }\n                    >\n                      <img src={ deleteImg } alt=\"img deletar\" className={ expense.id } />\n                    </button>\n                  </td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  dataExpenses: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n  updateExpenseAction: PropTypes.func.isRequired,\n  totalSumExpenses: PropTypes.func.isRequired,\n  editExpenseAction: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateExpenseAction: (payload) => dispatch(updateExpense(payload)),\n  totalSumExpenses: (payload) => dispatch(expensesAction(payload)),\n  editExpenseAction: (payload) => dispatch(editExpense(payload)),\n});\n\nconst mapStateToProps = (store) => ({\n  dataExpenses: store.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './WalletForm.module.css';\nimport {\n  currenciesRequest,\n  expensesAction,\n  fetchCoin,\n  finishEdit,\n  getCurrencies,\n  updateExpense,\n} from '../redux/actions';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: -1,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies = async () => {\n    const { fetchCurrencies, fetchCurrencysRequest } = this.props;\n    const URL = 'https://economia.awesomeapi.com.br/json/all';\n    fetchCurrencysRequest();\n    const promisse = await fetch(URL);\n    const data = await promisse.json();\n    const filteredData = Object.keys(data).filter((key) => key !== 'USDT');\n    fetchCurrencies(filteredData);\n  }\n\n  sumExpenses = (dataExpenses) => {\n    const { totalSumExpenses } = this.props;\n    const totalExpenses = dataExpenses.reduce((acc, curr) => {\n      acc += (parseFloat(curr.value) * parseFloat(curr.exchangeRates[curr.currency].ask));\n      return acc;\n    }, 0);\n    totalSumExpenses(parseFloat(totalExpenses));\n  }\n\n  handleInputs = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleClick = () => {\n    const { getExpenses } = this.props;\n    this.setState((prev) => ({ id: prev.id + 1 }), () => {\n      getExpenses(this.state);\n      this.setState({ value: '', description: '' });\n    });\n    setTimeout(() => {\n      const { dataExpenses } = this.props;\n      this.sumExpenses(dataExpenses);\n    }, 100);\n  }\n\n  updateExpense = () => {\n    const { idToEdit, dataExpenses, updateExpenseAction } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    dataExpenses[idToEdit].description = description;\n    dataExpenses[idToEdit].value = value;\n    dataExpenses[idToEdit].currency = currency;\n    dataExpenses[idToEdit].method = method;\n    dataExpenses[idToEdit].tag = tag;\n    updateExpenseAction(dataExpenses);\n    return dataExpenses;\n  }\n\n  handleInputsEdit = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => {\n      this.updateExpense();\n    });\n  }\n\n  handleClickEdit = () => {\n    const { finishEditAction } = this.props;\n    const dataExpenses = this.updateExpense();\n    this.sumExpenses(dataExpenses);\n    this.setState({ value: '', description: '' });\n    finishEditAction();\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { dataCoin, switchButton } = this.props;\n    return (\n      <div className={ styles.container }>\n        <div className={ styles.form }>\n          <label htmlFor=\"description-id\">\n            Descrição:\n            <input\n              type=\"text\"\n              className={ styles.description }\n              data-testid=\"description-input\"\n              id=\"description-id\"\n              name=\"description\"\n              value={ description }\n              onChange={ switchButton ? this.handleInputsEdit : this.handleInputs }\n            />\n          </label>\n\n          <label htmlFor=\"tag-id\">\n            Categoria da despesa:\n            <select\n              data-testid=\"tag-input\"\n              className={ styles.tag }\n              id=\"tag-id\"\n              name=\"tag\"\n              value={ tag }\n              onChange={ switchButton ? this.handleInputsEdit : this.handleInputs }\n            >\n              <option value=\"Alimentação\">\n                Alimentação\n              </option>\n              <option value=\"Lazer\">\n                Lazer\n              </option>\n              <option value=\"Trabalho\">\n                Trabalho\n              </option>\n              <option value=\"Transporte\">\n                Transporte\n              </option>\n              <option value=\"Saúde\">\n                Saúde\n              </option>\n            </select>\n          </label>\n\n          <label htmlFor=\"value-id\">\n            Valor:\n            <input\n              type=\"number\"\n              className={ styles.value }\n              data-testid=\"value-input\"\n              id=\"value-id\"\n              min=\"0\"\n              name=\"value\"\n              value={ value }\n              onChange={ switchButton ? this.handleInputsEdit : this.handleInputs }\n            />\n          </label>\n\n          <label htmlFor=\"currency-id\">\n            Moeda:\n            <select\n              data-testid=\"currency-input\"\n              className={ styles.coin }\n              id=\"currency-id\"\n              name=\"currency\"\n              value={ currency }\n              onChange={ switchButton ? this.handleInputsEdit : this.handleInputs }\n            >\n              {\n                dataCoin.map((coinName) => (\n                  <option\n                    key={ coinName }\n                    value={ coinName }\n                  >\n                    {`${coinName}`}\n                  </option>\n                ))\n              }\n            </select>\n\n          </label>\n          <label htmlFor=\"method-id\">\n            Forma de pagamento:\n            <select\n              data-testid=\"method-input\"\n              className={ styles.payment }\n              id=\"method-id\"\n              name=\"method\"\n              value={ method }\n              onChange={ switchButton ? this.handleInputsEdit : this.handleInputs }\n            >\n              <option value=\"Dinheiro\">\n                Dinheiro\n              </option>\n              <option value=\"Cartão de crédito\">\n                Cartão de crédito\n              </option>\n              <option value=\"Cartão de débito\">\n                Cartão de débito\n              </option>\n            </select>\n          </label>\n        </div>\n        <div className={ styles.button }>\n          <button\n            type=\"button\"\n            onClick={ switchButton ? this.handleClickEdit : this.handleClick }\n            disabled={ !(value.length && description.length) }\n          >\n            {switchButton ? 'Editar despesa' : 'Adicionar despesa'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nWalletForm.propTypes = {\n  fetchCurrencies: PropTypes.func.isRequired,\n  fetchCurrencysRequest: PropTypes.func.isRequired,\n  getExpenses: PropTypes.func.isRequired,\n  totalSumExpenses: PropTypes.func.isRequired,\n  updateExpenseAction: PropTypes.func.isRequired,\n  finishEditAction: PropTypes.func.isRequired,\n  switchButton: PropTypes.bool.isRequired,\n  idToEdit: PropTypes.number.isRequired,\n  dataCoin: PropTypes.arrayOf(PropTypes.string).isRequired,\n  dataExpenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n  dataCoin: store.wallet.currencies,\n  dataExpenses: store.wallet.expenses,\n  switchButton: store.wallet.editor,\n  idToEdit: store.wallet.idToEdit,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCurrencies: (payload) => dispatch(getCurrencies(payload)),\n  fetchCurrencysRequest: () => dispatch(currenciesRequest()),\n  getExpenses: (payload) => dispatch(fetchCoin(payload)),\n  totalSumExpenses: (payload) => dispatch(expensesAction(payload)),\n  updateExpenseAction: (payload) => dispatch(updateExpense(payload)),\n  finishEditAction: () => dispatch(finishEdit()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n","import React from 'react';\nimport Header from '../components/Header';\nimport Table from '../components/Table';\nimport WalletForm from '../components/WalletForm';\nimport styles from './Wallet.module.css';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <div className={ styles.container }>\n        <div className={ styles.container2 }>\n          <Header />\n          <WalletForm />\n        </div>\n        <Table />\n      </div>\n    );\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/carteira\" component={ Wallet } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'LOGIN_SUCESS':\n    return { ...state, email: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n  error: '',\n  isFetching: false,\n  totalExpenses: 0.00,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'GET_CURRENCIES':\n    return {\n      ...state, currencies: [...action.payload], isFetching: false,\n    };\n  case 'SUM_EXPENSES':\n    return {\n      ...state, totalExpenses: action.payload,\n    };\n  case 'UPDATE_EXPENSE':\n    return {\n      ...state, expenses: [...action.payload],\n    };\n  case 'EDIT_EXPENSE':\n    return {\n      ...state, idToEdit: action.payload, editor: true,\n    };\n  case 'FINISH_EDIT':\n    return {\n      ...state, editor: false,\n    };\n  case 'CURRENCIES_REQUEST':\n    return {\n      ...state, isFetching: true,\n    };\n  case 'GET_COIN':\n    return {\n      ...state, expenses: [...state.expenses, ...action.payload], isFetching: false,\n    };\n  case 'FAILED_REQUEST':\n    return {\n      ...state, error: `${action.payload}`, isFetching: false,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","// configure aqui sua store\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}